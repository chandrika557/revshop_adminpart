package com.revshop.controller;

import com.revshop.entity.Admin;
import com.revshop.entity.Buyer;
import com.revshop.entity.Complaints;
import com.revshop.entity.Product;
import com.revshop.entity.Retailer;
import com.revshop.service.AdminServiceInterface;
import com.revshop.service.BuyerService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.Random;

@Controller
public class AdminController {

    @Autowired
    private AdminServiceInterface adminService;
    
    @Autowired
    private BuyerService buyerService;

    // Path where all images are stored
    private final String UPLOAD_DIRECTORY = "C:\\Users\\Jaya chandrika\\eclipse-workspace\\RevShop_Phase1-master\\src\\main\\webapp\\uploads";

    @RequestMapping("AdminLogin")
    public ModelAndView loginAdmin(HttpServletRequest request, HttpServletResponse response,
                                   @RequestParam("email") String email, @RequestParam("password") String password) {
        HttpSession hs = request.getSession();
        Admin admin = adminService.adminLoginService(email, password);
        ModelAndView mv = new ModelAndView();
        
        if (admin != null) {
            hs.setAttribute("admin", admin) ;
            mv.setViewName("adminDashboard.jsp");
        } else {
            mv.setViewName("admin-login.jsp");
            mv.addObject("message", "Invalid credentials");
        }
		return mv;
    }

    @RequestMapping(value = "addProducts", method = RequestMethod.POST)
    public ModelAndView addProduct(HttpServletRequest request,
                                    @RequestParam("name") String name,
                                    @RequestParam("price") String price,
                                    @RequestParam("description") String description,
                                    @RequestParam("status") String status,
                                    @RequestParam("category") String category,
                                    @RequestParam("image") MultipartFile image) {

        HttpSession session = request.getSession();
        ModelAndView mv = new ModelAndView();

        try {
            // Generate unique code for the product
            String SALTCHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
            StringBuilder salt = new StringBuilder();
            Random rnd = new Random();
            while (salt.length() < 3) {
                int index = (int) (rnd.nextFloat() * SALTCHARS.length());
                salt.append(SALTCHARS.charAt(index));
            }
            String code = salt.toString();

            // Save the uploaded image
            String imageName = image.getOriginalFilename();
            File uploadFile = new File(UPLOAD_DIRECTORY + File.separator + imageName);
            image.transferTo(uploadFile);

            // Create and set Product object
            Product product = new Product();
            product.setCode(code);
            product.setProductName(name);
            product.setPrice(price);
            product.setDescription(description);
            product.setMrp_price(price); // Assuming MRP price is the same as regular price for simplicity
            product.setProduct_category(category);
            product.setImage(imageName);
            product.setActive(status);

            // Save product to the database
            boolean isProductAdded = adminService.addProduct(product);
            if (isProductAdded) {
                session.setAttribute("message", "Product added successfully.");
                mv.setViewName("adminDashboard.jsp");
            } else {
                session.setAttribute("message", "Failed to add product.");
                mv.setViewName("admin-add-product.jsp");
            }

        } catch (IOException e) {
            e.printStackTrace();
            session.setAttribute("message", "Error occurred while uploading image.");
            mv.setViewName("admin-add-product.jsp");
        }
 
        return mv;
    }

    @RequestMapping("adminDashboard")
    public ModelAndView showDashboard(HttpServletRequest request) {
        HttpSession session = request.getSession();
        ModelAndView mv = new ModelAndView();

        // Check if admin is logged in
        if (session.getAttribute("admin") == null) {
            mv.setViewName("admin-login.jsp");
            return mv;
        }

        // Fetch data for the dashboard
     // Fetch data for the dashboard
        int productCount = adminService.getProductCount();
        int registrationCount = adminService.getRegistrationCount();
        int viewerCount = adminService.getViewerCount(); // get the viewer count
        int userCount = adminService.getUserCount(); // Get the user count
        System.out.println(registrationCount);

        // Add data to ModelAndView
        mv.addObject("productCount", productCount);
        mv.addObject("registrationCount", registrationCount);
        mv.addObject("viewerCount", viewerCount);
        mv.addObject("userCount", userCount); // Add user count to the model
        mv.setViewName("adminDashboard.jsp");


        return mv;
  }
    @RequestMapping("viewProducts")
    public ModelAndView manageProducts(HttpServletRequest request) {
        HttpSession session = request.getSession();
        ModelAndView mv = new ModelAndView();

        // Check if admin is logged in
        if (session.getAttribute("admin") == null) {
            mv.setViewName("admin-login.jsp");
            return mv;
        }

        // Fetch the list of products
        List<Product> products = adminService.getAllProducts();

        // Add the product list to ModelAndView
        mv.addObject("products", products);
        
        // Add an empty Product object for the form
        mv.addObject("product", new Product());

        // Set the view to manageProducts.jsp
        mv.setViewName("manageProducts.jsp");
        
        return mv;
    }

    @RequestMapping("manageUsers")
    public ModelAndView manageUsers(HttpServletRequest request) {
        HttpSession session = request.getSession();
        ModelAndView mv = new ModelAndView();

        // Check if admin is logged in
        if (session.getAttribute("admin") == null) {
            mv.setViewName("admin-login.jsp");
            return mv;
        }

        // Fetch the list of users and retailers
        List<Buyer> users = adminService.getAllUsers();
        List<Retailer> retailers = adminService.getAllRetailers(); // Fetch retailers

        // Add the user and retailer lists to the ModelAndView
        mv.addObject("users", users);
        mv.addObject("retailers", retailers); // Add retailers
        mv.setViewName("manageUsers.jsp");
        
        return mv;
    }
    @GetMapping("viewComplaints")
    public ModelAndView viewComplaints(HttpServletRequest request) {
        HttpSession session = request.getSession();
        ModelAndView mv = new ModelAndView();

        // Check if admin is logged in
        if (session.getAttribute("admin") == null) {
            mv.setViewName("admin-login.jsp");
            return mv;
        }

        // Fetch the list of complaints
        List<Complaints> complaints = adminService.getAllComplaints(); // Implement this in your service
        mv.addObject("complaints", complaints);  // Add the complaints list to the ModelAndView

        mv.setViewName("viewComplaints.jsp");  // Set the view to the JSP page you created
        return mv;
    }
    
    @GetMapping("viewRegistrationRequests")
    public ModelAndView viewRegistrationRequests(HttpServletRequest request) {
        HttpSession session = request.getSession();
        ModelAndView mv = new ModelAndView();

        // Check if admin is logged in
        if (session.getAttribute("admin") == null) {
            mv.setViewName("admin-login.jsp");
            return mv;
        }

        // Fetch the list of registration requests
        List<Retailer> registrationRequests = adminService.getAllRegistrationRequests();
        mv.addObject("registrationRequests", registrationRequests);

        mv.setViewName("viewRegistrationRequests.jsp"); // Set the view to the JSP page you will create
        return mv;
    }
    
 // Approve and Reject methods
    @RequestMapping("approveRegistration")
    public String approveRegistration(@RequestParam("userId") int userId, RedirectAttributes redirectAttributes) {
        boolean success = BuyerService.approveUser(userId);
        // Add flash attribute and redirect...
    }

    @RequestMapping("rejectRegistration")
    public String rejectRegistration(@RequestParam("userId") int userId, RedirectAttributes redirectAttributes) {
        boolean success = BuyerService.rejectUser(userId);
        // Add flash attribute and redirect...
    }


}
